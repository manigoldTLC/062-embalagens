$color-primary: #1A1A1A;
$color-secondary: #F5F5F5;
$color-accent: #FF6F61;
$color-text: #333333;

$font-family: 'Inter', sans-serif;
$font-size-base: 1rem;
$font-size-lg: 1.5rem;
$font-size-xl: 2.5rem;

$spacing-xs: 0.5rem;
$spacing-sm: 1rem;
$spacing-md: 2rem;
$spacing-lg: 3rem;
$spacing-xl: 4rem;
$spacing-xxl: 5rem;

$border-radius: 0.5rem;
$transition: all 0.3s ease-in-out;

$brand-blue: #1D3A9B;
$brand-blue-dark: #132A78;
$brand-blue-light: #4A6DCC;

$brand-yellow: #FFD200;
$brand-yellow-dark: #E6BB00;
$brand-yellow-light: #FFEE99;

$brand-white: #FFFFFF;
$brand-black: #1A1A1A;

$primary-color: $brand-blue;
$primary-color-dark: $brand-blue-dark;
$primary-color-light: $brand-blue-light;
$secondary-color: $brand-yellow;
$secondary-color-dark: $brand-yellow-dark;
$secondary-color-light: $brand-yellow-light;

$accent-color: $brand-yellow;
$accent-color-dark: $brand-yellow-dark;
$accent-color-light: $brand-yellow-light;

$neutral-darkest: $brand-black;
$neutral-dark: #333333;
$neutral-medium: #666666;
$neutral-light: #CCCCCC;
$neutral-lighter: #E0E0E0;
$neutral-lightest: #F5F5F5;
$neutral-ultra-light: #FAFAFA;

$success-color: #28A745;
$error-color: #DC3545;
$warning-color: #FFC107;
$info-color: #17A2B8;

$body-bg: $brand-white;
$section-bg-light: $neutral-ultra-light;
$card-bg: $brand-white;

$text-color-body: $neutral-darkest;
$text-color-headings: $brand-blue-dark;
$text-color-on-primary: $brand-white;
$text-color-on-accent: $neutral-darkest;
$text-color-muted: $neutral-medium;
$link-color: $brand-blue-dark;
$link-hover-color: darken($brand-blue-dark, 10%);

$font-family-sans-serif: var(--font-open-sans), -apple-system;
$font-family-headings: var(--font-montserrat), -apple-system;

$font-size-sm: $font-size-base * 0.875;
$font-size-lg: $font-size-base * 1.125;
$font-size-xl: $font-size-base * 1.25;

$h1-font-size: $font-size-base * 2.25;
$h2-font-size: $font-size-base * 1.875;
$h3-font-size: $font-size-base * 1.5;
$h4-font-size: $font-size-base * 1.25;
$h5-font-size: $font-size-base * 1.125;
$h6-font-size: $font-size-base;

$font-weight-light: 300;
$font-weight-normal: 400;
$font-weight-medium: 500;
$font-weight-semibold: 600;
$font-weight-bold: 700;

$line-height-base: 1.6;
$line-height-headings: 1.3;

$spacer: 1rem;
$spacer-xs: $spacer * 0.25;
$spacer-sm: $spacer * 0.5;
$spacer-md: $spacer;
$spacer-lg: $spacer * 1.5;
$spacer-xl: $spacer * 2;
$spacer-xxl: $spacer * 3;

$border-width: 1px;
$border-color: $neutral-lighter;
$border-radius-base: 0.375rem;
$border-radius-sm: 0.25rem;
$border-radius-md: 0.375rem;
$border-radius-lg: 0.5rem;
$border-radius-pill: 50rem;

$box-shadow-sm: 0 1px 2px 0 rgba($brand-black, 0.05);
$box-shadow-base: 0 1px 3px 0 rgba($brand-black, 0.1), 0 1px 2px 0 rgba($brand-black, 0.06);
$box-shadow-md: 0 4px 6px -1px rgba($brand-black, 0.1), 0 2px 4px -1px rgba($brand-black, 0.06);
$box-shadow-lg: 0 10px 15px -3px rgba($brand-black, 0.1), 0 4px 6px -2px rgba($brand-black, 0.05);
$box-shadow-xl: 0 20px 25px -5px rgba($brand-black, 0.1), 0 10px 10px -5px rgba($brand-black, 0.04);
$box-shadow-inner: inset 0 2px 4px 0 rgba($brand-black, 0.06);

$breakpoint-xs: 0;
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;
$breakpoint-xxl: 1400px;

$container-max-width-sm: 540px;
$container-max-width-md: 720px;
$container-max-width-lg: 960px;
$container-max-width-xl: 1320px;
$container-max-width-xxl: 1540px;

$zindex-dropdown: 1000;
$zindex-sticky: 1020;
$zindex-fixed: 1030;
$zindex-modal-backdrop: 1040;
$zindex-modal: 1050;
$zindex-popover: 1060;
$zindex-tooltip: 1070;
$zindex-toast: 1090;

@mixin media-breakpoint-up($name, $breakpoints: (xs: $breakpoint-xs,
		sm: $breakpoint-sm,
		md: $breakpoint-md,
		lg: $breakpoint-lg,
		xl: $breakpoint-xl,
		xxl: $breakpoint-xxl )) {
	$min: map-get($breakpoints, $name);

	@if $min {
		@media (min-width: $min) {
			@content;
		}
	}

	@else {
		@warn "Breakpoint `#{$name}` não encontrado.";
	}
}

@mixin media-breakpoint-down($name, $breakpoints: (xs: $breakpoint-xs,
		sm: $breakpoint-sm,
		md: $breakpoint-md,
		lg: $breakpoint-lg,
		xl: $breakpoint-xl,
		xxl: $breakpoint-xxl )) {
	$max: map-get($breakpoints, $name);

	@if $max {
		@media (max-width: ($max - 0.02px)) {
			@content;
		}
	}

	@else {
		@warn "Breakpoint `#{$name}` não encontrado.";
	}
}

@mixin flex-center($direction: row, $justify: center, $align: center) {
	display: flex;
	flex-direction: $direction;
	justify-content: $justify;
	align-items: $align;
}

@mixin visually-hidden {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	clip: rect(0, 0, 0, 0) !important;
	white-space: nowrap !important;
	border: 0 !important;
}

@mixin truncate-text($lines: 1) {
	@if $lines ==1 {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	@else {
		display: -webkit-box;
		-webkit-line-clamp: $lines;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
}

@mixin button-base {
	display: inline-block;
	font-weight: $font-weight-medium;
	line-height: $line-height-base;
	color: $neutral-darkest;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	user-select: none;
	background-color: transparent;
	border: $border-width solid transparent;
	padding: $spacer-sm $spacer-md;
	font-size: $font-size-base;
	border-radius: $border-radius-base;
	transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

	&:hover {
		text-decoration: none;
	}

	&:focus,
	&.focus {
		outline: 0;
	}

	&:disabled,
	&.disabled {
		opacity: 0.65;
		pointer-events: none;
	}
}

@mixin button-variant($background, $color, $border-color: $background, $hover-background: darken($background, 7.5%), $hover-color: $color, $hover-border-color: darken($border-color, 10%)) {
	color: $color;
	background-color: $background;
	border-color: $border-color;

	&:hover {
		color: $hover-color;
		background-color: $hover-background;
		border-color: $hover-border-color;
	}

	&:focus,
	&.focus {
		box-shadow: 0 0 0 0.2rem rgb(mix($color, $background, 15%), 0.5);
	}
}

@mixin button-outline-variant($color, $hover-color: $brand-white, $hover-background: $color) {
	color: $color;
	border-color: $color;
	background-color: transparent;

	&:hover {
		color: $hover-color;
		background-color: $hover-background;
		border-color: $hover-background;
	}
}

@mixin clearfix {
	&::after {
		display: block;
		clear: both;
		content: "";
	}
}

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin transition($properties...) {
	@if length($properties)==0 {
		transition: all 0.25s ease-in-out;
	}

	@else {
		transition-property: $properties;
		transition-duration: 0.25s;
		transition-timing-function: ease-in-out;
	}
}